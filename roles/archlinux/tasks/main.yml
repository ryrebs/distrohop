---
- name: Check if pamac is installed
  command: which pamac
  register: pamac
  tags: base

- name: Check updates with pamac
  command: pamac checkupdates
  register: updates
  when: pamac.rc == 0
  failed_when: updates.stderr != ""
  tags: base

- name: Update with pamac
  command: pamac upgrade --no-confirm
  become: yes
  when:
    - pamac.rc == 0
    - updates.rc > 0
  tags: base

- name: Install apparmor
  command: pamac install apparmor --no-confirm
  become: yes
  register: apparmor
  notify:
    - Enable apparmor service
    - Start apparmor service
  tags:
    - base

- name: Install clamav
  command: pamac install clamav --no-confirm
  become: yes
  register: clamav
  tags:
    - base

- name: Install tlp for battery management
  command: pamac install tlp --no-confirm
  register: tlp
  become: yes
  notify:
    - Setup tlp config
  tags:
    - base

- name: Install docker compose
  command: pamac install docker-compose --no-confirm
  become: yes
  tags:
    - dev

- name: Install firejail
  command: pamac install firejail --no-confirm
  become: yes
  register: apparmor
  tags:
    - base

- name: Install redshift
  command: pamac install redshift --no-confirm
  become: yes
  tags:
    - base

- name: Install yay
  command: pamac install yay --no-confirm
  become: yes
  tags: base

- name: Install terminator
  command: pamac install terminator --no-confirm
  register: terminator
  become: yes
  tags:
    - dev
    - terminator

- name: Install vim
  command: pamac install vim --no-confirm
  become: yes
  tags:
    - dev
    - vim

- name: Install zsh
  command: pamac install zsh zsh-completions --no-confirm
  register: zsh
  become: yes
  notify:
    - Change shell to zsh
  tags:
    - dev
    - zsh

- name: Remove existing .oh-my-zsh
  file:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
    state: absent
  tags:
    - dev
    - zshrc

- name: Install oh-my-zsh
  shell: >
    curl -o- "https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh" | bash
  args:
    chdir: "{{ ansible_env.HOME }}"
  tags:
    - dev
    - zshrc

- name: Install git
  command: pamac install git --no-confirm
  become: yes
  notify:
    - Setup git configurations
    - Create git log alias
    - Generate rsa keys
  tags:
    - dev
    - git

- name: Install docker
  command: pamac install docker --no-confirm
  become: yes
  notify: Add user to docker group
  tags:
    - dev
    - docker

- name: Create nvm folder
  ansible.builtin.file:
    path: "{{ nvm_dir_path }}"
    state: directory
    mode: "0755"
  register: nvm_folder
  tags:
    - dev
    - nvm

- name: Install nvm
  shell: >
    export NVM_DIR={{ nvm_dir_path }} && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/{{ nvm_version }}/install.sh | bash
  args:
    creates: "{{ nvm_dir_path }}/nvm.sh"
  register: nvm
  when: nvm_folder is success
  tags:
    - dev
    - nvm

- name: Install latest node
  shell: ". {{ nvm_dir_path }}/nvm.sh && nvm install node"
  args:
    creates: "{{ nvm_dir_path }}/.nvm/versions/node"
    chdir: "{{ nvm_dir_path }}"
    executable: /bin/zsh
  when: nvm is success
  tags:
    - dev
    - node

- name: Install Golang
  ansible.builtin.get_url:
    url: "https://dl.google.com/go/{{ golang_version }}.linux-amd64.tar.gz"
    dest: "{{ ansible_env.HOME }}/Downloads/golang.tar.gz"
  notify:
    - Golang post installation setup
    - Export golang paths
  register: golang
  tags:
    - dev
    - golang

- name: Insert MISC shell lines
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK Defaults"
    block: |
      # Android
      ANDROID_HOME={{ android_home_dir_path }}
      export ANDROID_NDK_HOME=$ANDROID_HOME/ndk
      export PATH=$PATH:$ANDROID_HOME/emulator
      export PATH=$PATH:$ANDROID_HOME/tools
      export PATH=$PATH:$ANDROID_HOME/tools/bin
      export PATH=$PATH:$ANDROID_HOME/platform-tools

      # Pipenv
      export PIPENV_VENV_IN_PROJECT="enabled"

      # Show large size on current dir
      alias getsize="du -h ./ | grep -P '\dG'"

      # Clamav
      alias scanhome="clamscan --recursive --infected {{ ansible_env.HOME }}"
      alias scanf="clamscan"

      # Firejail
      alias fjail='firejail --apparmor --private={{ jailtime_dir_path }}'

      alias ec="vim $HOME/.zshrc" # edit .zshrc
      alias sc="source $HOME/.zshrc"  # reload zsh configuration
  tags:
    - dev
    - zshrc

- name: Load/unload kernel modules
  become: yes
  copy:
    dest: "{{ kernel_module_conf_file_path }}"
    content: |
      blacklist pcspkr
      blacklist snd_pcsp
  tags:
    - base
    - module

- name: Install firefox
  command: "pamac install firefox --no-confirm"
  become: yes
  tags:
    - base
    - firefox

- name: Install firefox
  command: "pamac install chromium --no-confirm"
  become: yes
  tags:
    - base
    - chromium

- name: Install java
  command: "pamac install jdk-openjdk --no-confirm"
  become: yes
  tags:
    - base
    - java

- name: Set firewall rules
  command: "{{ item  }}"
  loop:
    - ufw default deny incoming
    - ufw default allow outgoing
  become: yes
  tags:
    - base
    - firewall

- name: Allow ssh
  command: ufw allow ssh
  become: yes
  when: remote is defined and "remote | bool"
  tags:
    - base
    - firewall

## (*Note for managed node ) This will enable the firewall and might cut off ssh connection.
- name: Enable firewall
  ansible.builtin.command: ufw enable
  become: yes
  tags:
    - base
    - firewall
  async: 1
  poll: 0

- name: Install Zplug
  ansible.builtin.get_url:
    url: https://github.com/zplug/zplug/archive/refs/heads/master.zip
    dest: "{{ arch_zplug_dir_path }}/zplug.zip"
  notify: Setup zplug
  register: zplug
  tags:
    - dev
    - zplug
#
# TODO: Install codium a VSCode without Microsoft replacement
#
