---
- name: Add custom tlp config
  become: yes
  copy:
    dest: "{{ tlp_conf_file_path }}"
    content: |
      ## -- Start custom config
      ## Mostly firmware related. Check docs for more info

      # Start charging at level below this threshold
      START_CHARGE_THRESH_BAT0=26

      # Stop charging at threshold level or greater
      STOP_CHARGE_THRESH_BAT0=81

      # Set CPU energy/performance policies
      CPU_ENERGY_PERF_POLICY_ON_AC=performance
      CPU_ENERGY_PERF_POLICY_ON_BAT="balance_power"

      # Enable platform profile
      PLATFORM_PROFILE_ON_AC=performance
      PLATFORM_PROFILE_ON_BAT=balance_power

      # Controls runtime power management for PCIe devices
      RUNTIME_PM_ON_AC=auto
      RUNTIME_PM_ON_BAT=auto

      # Turbo boost
      CPU_BOOST_ON_AC=1
      CPU_BOOST_ON_BAT=0

      # Wifi powersaving (Slows down wifi)
      WIFI_PWR_ON_AC="off"
      WIFI_PWR_ON_BAT="on"

      ## -- End custom config
  when: tlp is succeeded
  listen: Setup tlp

- name: Start tlp
  become: yes
  command: tlp start
  when: tlp is succeeded
  listen: Setup tlp

- name: Change shell to zsh
  become: yes
  user:
    name: "{{ shell_user }}"
    shell: /usr/bin/zsh
    state: present
  when: zsh_install is succeeded
  tags:
    - dev
    - chsh

- name: Create git log alias
  listen: Setup zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK Git Aliases"
    block: |
      alias glog="git log --graph --all --pretty=format:''%C(blue)%h %C(red)%d %Creset - %C(yellow)%s%Creset %C(green)(%cr)%Creset <%aN>''"
  tags:
    - dev
    - git

- name: Add zplug default plugins
  listen: Setup zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK zshrc"
    block: |
      # Keep 5000 lines of history within the shell and save it to ~/.zsh_history:
      HISTSIZE=5000
      SAVEHIST=5000
      HISTFILE=~/.zsh_history

      # zplug - manage plugins
      source /usr/share/zplug/init.zsh
      zplug "plugins/git", from:oh-my-zsh
      zplug "plugins/sudo", from:oh-my-zsh
      zplug "plugins/command-not-found", from:oh-my-zsh
      zplug "zsh-users/zsh-syntax-highlighting"
      zplug "zsh-users/zsh-autosuggestions"
      zplug "zsh-users/zsh-history-substring-search"
      zplug "zsh-users/zsh-completions"
      zplug "junegunn/fzf"
      zplug "themes/ys", from:oh-my-zsh, as:theme   # Theme

      # zplug - install/load new plugins when zsh is started or reloaded
      if ! zplug check --verbose; then
          printf "Install? [y/N]: "
          if read -q; then
              echo; zplug install
          fi
      fi
      zplug load --verbose

- name: Set firewall rules
  command: "{{ item  }}"
  loop:
    - ufw default deny incoming
    - ufw default allow outgoing
  become: yes
  listen: Setup ufw

- name: Allow ssh
  ansible.builtin.command: ufw allow SSH
  become: yes
  when:
    - ufw is succeeded
    - remote is defined and "remote | bool"
  listen: Setup ufw

## (*Note for managed node ) This will enable the firewall and might cut off ssh connection.
- name: Enable firewall
  ansible.builtin.command: ufw enable
  become: yes
  when: ufw is succeeded
  listen: Setup ufw
  async: 1
  poll: 0

- name: Setup codium
  ansible.builtin.command: dpkg -i ./codium_{{ codium_version }}_amd64.deb
  args:
    chdir: "{{ ansible_env.HOME }}/Downloads"
  become: yes
  when: codium is succeeded
  listen: Codium post install

- name: Remove codium .deb
  file:
    path: "{{ ansible_env.HOME }}/Downloads/codium_{{ codium_version }}_amd64.deb"
    state: absent
  listen: Codium post install
