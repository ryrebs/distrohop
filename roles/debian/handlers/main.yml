---
- name: Setup tlp config
  become: yes
  copy:
    dest: "{{ tlp_config_path }}"
    content: |
      ## -- Start custom config
      ## Mostly firmware related. Check docs for more info

      ## On battery related settings
      # Start charging at level below this threshold
      START_CHARGE_THRESH_BAT0=26

      # Stop charging at threshold level or greater
      STOP_CHARGE_THRESH_BAT0=81

      # Enable platform profile
      PLATFORM_PROFILE_ON_BAT=balance_power

      # Disable turbo boost
      CPU_BOOST_ON_BAT=0

      ## On ac related settings
      # Set CPU energy/performance policies
      CPU_ENERGY_PERF_POLICY_ON_AC=balance_performance

      # Enable platform profile
      PLATFORM_PROFILE_ON_AC=balance_performance

      # Controls runtime power management for PCIe devices
      RUNTIME_PM_ON_AC=auto

      # Enable turbo boost
      CPU_BOOST_ON_AC=1

      ## -- End custom config
  when: tlp is success

- name: Change shell to zsh
  shell: "chsh -s $(which zsh) {{ shell_user }}"
  become: yes
  when: zsh is success

- name: Setup zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK zshrc"
    block: |
      # Keep 5000 lines of history within the shell and save it to ~/.zsh_history:
      HISTSIZE=5000
      SAVEHIST=5000
      HISTFILE=~/.zsh_history

      # zplug - manage plugins
      source /usr/share/zplug/init.zsh
      zplug "plugins/git", from:oh-my-zsh
      zplug "plugins/sudo", from:oh-my-zsh
      zplug "plugins/command-not-found", from:oh-my-zsh
      zplug "zsh-users/zsh-syntax-highlighting"
      zplug "zsh-users/zsh-autosuggestions"
      zplug "zsh-users/zsh-history-substring-search"
      zplug "zsh-users/zsh-completions"
      zplug "junegunn/fzf"
      zplug "themes/ys", from:oh-my-zsh, as:theme   # Theme

      # zplug - install/load new plugins when zsh is started or reloaded
      if ! zplug check --verbose; then
          printf "Install? [y/N]: "
          if read -q; then
              echo; zplug install
          fi
      fi
      zplug load --verbose

- name: Setup ufw
  become: yes
  command: "{{ item }}"
  loop:
    - ufw default deny incoming
    - ufw default allow outgoing
    - ufw enable
  when: ufw is success

- name: Create golang root extraction folder
  ansible.builtin.file:
    path: "{{ golang_root_path }}"
    state: directory
    mode: "0755"
  listen: Golang post installation setup
  when: golang is success

- name: Create golang package folder
  ansible.builtin.file:
    path: "{{ golang_app_path }}"
    state: directory
    mode: "0755"
  listen: Golang post installation setup
  when: golang is success

- name: Extract golang
  unarchive:
    src: "{{ ansible_env.HOME }}/Downloads/golang.tar.gz"
    dest: "{{ golang_root_path }}"
    remote_src: "{{ remote | default('no', true) }}"
  listen: Golang post installation setup
  when: golang is success

- name: Remove golang tgz
  file:
    path: "{{ ansible_env.HOME }}/Downloads/golang.tar.gz"
    state: absent
  listen: Golang post installation setup

- name: Export golang paths
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK Golang"
    block: |
      # Golang
      GOPATH={{ golang_app_path }}
      GOBIN={{ golang_app_path }}/bin
      export PATH=$PATH:$GOBIN
      export PATH=$PATH:$GOPATH
      export PATH=$PATH:{{ golang_root_path }}/go/bin
  listen: Golang setup paths
  when: golang is success
