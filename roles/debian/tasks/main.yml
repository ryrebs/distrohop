---
- name: apt update
  ansible.builtin.apt:
    update_cache: yes

- name: apt upgrade
  become: yes
  ansible.builtin.apt:
    upgrade: full
  tags:
    - base

- name: Install base packages
  become: yes
  ansible.builtin.apt:
    pkg:
      - apparmor-profiles
      - apparmor-profiles-extra
      - firejail
      - gammastep
      - firefox-esr
      - sshpass
      - blueman
  tags:
    - base

- name: Load/unload kernel modules
  become: yes
  copy:
    dest: "{{ kernel_module_conf_file_path }}"
    content: |
      blacklist pcspkr
      blacklist snd_pcsp
  tags:
    - base
    - kernel-mod

- name: Install tlp for battery management
  ansible.builtin.apt:
    name: tlp
    state: present
  register: tlp
  become: yes
  notify: Setup tlp
  tags:
    - base
    - tlp

- name: Install firewall
  ansible.builtin.apt:
    name: ufw
    state: present
  register: ufw
  become: yes
  notify: Setup ufw
  tags:
    - base
    - firewall

- name: Install some packages for development
  become: yes
  ansible.builtin.apt:
    pkg:
      - default-jdk
      - terminator
      - git
      - chromium
      - default-jdk
      - vim
      - htop
      - pipenv
      - xpad
  tags:
    - dev

- name: Remove existing .oh-my-zsh
  file:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
    state: absent
  tags:
    - dev
    - zshrc

- name: Setup git configurations
  ansible.builtin.command: "git config --global {{ item }}"
  with_items:
    - user.name "{{ github_user }}"
    - user.email "{{ github_email }}"
    - color.ui auto
    - color.branch auto
    - color.diff auto
    - color.status auto
  when:
    - github_user is defined
    - github_email is defined
  tags:
    - dev
    - git

- name: Generate rsa keys
  ansible.builtin.command: ssh-keygen -t ed25519 -C '{{ github_email }}' -f "{{ ansible_env.HOME }}/.ssh/id_rsa" -N ""
  args:
    creates: "{{ ansible_env.HOME }}/.ssh/id_rsa"
  when: github_email is defined
  tags:
    - dev
    - git
    - ssh

- name: Install Golang
  get_url:
    url: "https://dl.google.com/go/{{ golang_version }}.linux-amd64.tar.gz"
    dest: "{{ ansible_env.HOME }}/Downloads/golang.tar.gz"
  notify:
    - Golang post installation setup
    - Export golang paths
  register: golang
  tags:
    - dev
    - golang

- name: Install zsh
  become: yes
  ansible.builtin.apt:
    pkg:
      - zsh
      - zplug
  notify: Change shell to zsh
  register: zsh_install
  tags:
    - dev
    - zsh

- name: Install oh-my-zsh
  ansible.builtin.shell: curl -o- "https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh" | bash
  args:
    chdir: "{{ ansible_env.HOME }}"
  notify: Setup zshrc
  when: zsh_install is succeeded
  tags:
    - dev
    - zshrc

- name: Insert MISC shell lines for base
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK Defaults"
    block: |
      # Firejail
      alias fjail='firejail --apparmor --private={{ jailtime_dir_path }}'
    tags:
      - base
      - bashrc

- name: Insert MISC shell lines
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK Defaults"
    block: |
      # Android
      ANDROID_HOME={{ android_home_dir_path }}
      export ANDROID_NDK_HOME=$ANDROID_HOME/ndk
      export PATH=$PATH:$ANDROID_HOME/emulator
      export PATH=$PATH:$ANDROID_HOME/tools
      export PATH=$PATH:$ANDROID_HOME/tools/bin
      export PATH=$PATH:$ANDROID_HOME/platform-tools

      # Pipenv
      export PIPENV_VENV_IN_PROJECT="enabled"

      # Show large size on current dir
      alias getsize="du -h ./ | grep -P '\dG'"

      # Clamav
      alias scanhome="clamscan --max-filesize=2000M --max-scansize=2000M --recursive --infected $HOME"
      alias scanf="clamscan"

      # Firejail
      alias fjail='firejail --apparmor --private={{ jailtime_dir_path }}'

      alias ec="vim $HOME/.zshrc" # edit .zshrc
      alias sc="source $HOME/.zshrc"  # reload zsh configuration
  tags:
    - dev
    - zshrc

- name: Remove useless packages from the cache
  become: yes
  ansible.builtin.apt:
    autoclean: yes
  tags:
    - cleanup

- name: Remove dependencies that are no longer required and purge their configuration files
  become: yes
  ansible.builtin.apt:
    autoremove: yes
    purge: true
  tags:
    - cleanup

- name: Install VScodium
  ansible.builtin.get_url:
    url: "https://github.com/VSCodium/vscodium/releases/download/{{ codium_version }}/codium_{{ codium_version }}_amd64.deb"
    dest: "{{ ansible_env.HOME }}/Downloads"
  notify: Codium post install
  register: codium
  tags:
    - dev
    - codium

- name: Install Virtualbox
  include_tasks:
    file: virtualbox.yml
    apply:
      tags:
        - dev
        - virtualbox
  tags:
    - dev
    - virtualbox

- name: Install Docker
  include_tasks:
    file: docker.yml
    apply:
      tags:
        - dev
        - docker
  tags:
    - dev
    - docker

- block:
    - name: Install latest node
      include_tasks: node.yml
  tags:
    - dev
    - node

- block:
    - name: Install Clamav
      include_tasks: clamav.yml
  tags:
    - dev
    - clamav
