---
- name: apt update
  ansible.builtin.apt:
    update_cache: yes

- name: apt upgrade
  become: yes
  ansible.builtin.apt:
    upgrade: full
  tags:
    - base

- name: Install base packages (Packages without further setup needs.)
  become: yes
  ansible.builtin.apt:
    pkg:
      - firejail
      - clamav
      - gammastep
      - firefox-esr
      - default-jdk
      - apparmor-profiles-extra
      - apparmor-profiles
  tags:
    - base

- name: Install tlp for battery management
  ansible.builtin.apt:
    name: tlp
    state: present
  register: tlp
  become: yes
  notify: Setup tlp
  tags:
    - base
    - tlp

## (*Note for managed node ) This will enable the firewall and cut off ssh connection.
- name: Install firewall
  ansible.builtin.apt:
    name: ufw
    state: present
  register: ufw
  become: yes
  notify:
    - Setup ufw
  tags:
    - base
    - firewall

- name: Install some packages for development
  become: yes
  ansible.builtin.apt:
    pkg:
      - terminator
      - git
      - chromium
      - default-jdk
      - zplug
      - vim
  tags:
    - dev

- name: Remove existing .oh-my-zsh
  file:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
    state: absent
  tags:
    - dev
    - zshrc

- name: Install oh-my-zsh
  shell: >
    curl -o- "https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh" | bash
  args:
    chdir: "{{ ansible_env.HOME }}"
  notify: Setup zshrc
  tags:
    - dev
    - zshrc

- name: Setup git configurations
  command: "git config --global {{ item }}"
  with_items:
    - user.name "{{ github_user }}"
    - user.email "{{ github_email }}"
    - color.ui auto
    - color.branch auto
    - color.diff auto
    - color.status auto
  when:
    - github_user != None
    - github_email != None
  tags:
    - dev
    - git

- name: Create git log alias
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK Git Aliases"
    block: |
      'alias glog="git log --graph --all --pretty=format:''%C(blue)%h %C(red)%d %Creset - %C(yellow)%s%Creset %C(green)(%cr)%Creset <%aN>''"'
  tags:
    - dev
    - git

- name: Create nvm folder
  ansible.builtin.file:
    path: "{{ nvm_dir_path }}"
    state: directory
    mode: "0755"
  register: nvm_folder
  tags:
    - dev
    - nvm

- name: Install nvm
  shell: >
    export NVM_DIR={{ nvm_dir_path }} && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/{{ nvm_version }}/install.sh | bash
  args:
    creates: "{{ nvm_dir_path }}/nvm.sh"
  register: nvm
  when: nvm_folder is success
  tags:
    - dev
    - nvm

- name: Install latest node
  shell: ". {{ nvm_dir_path }}/nvm.sh && nvm install node"
  args:
    creates: "{{ nvm_dir_path }}/.nvm/versions/node"
    chdir: "{{ nvm_dir_path }}"
    executable: /bin/zsh
  when: nvm is success
  tags:
    - dev
    - node

- name: Insert MISC shell lines
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK Defaults"
    block: |
      # Android
      ANDROID_HOME={{ android_home_dir_path }}
      export ANDROID_NDK_HOME=$ANDROID_HOME/ndk
      export PATH=$PATH:$ANDROID_HOME/emulator
      export PATH=$PATH:$ANDROID_HOME/tools
      export PATH=$PATH:$ANDROID_HOME/tools/bin
      export PATH=$PATH:$ANDROID_HOME/platform-tools

      # Pipenv
      export PIPENV_VENV_IN_PROJECT="enabled"

      # Show large size on current dir
      alias getsize="du -h ./ | grep -P '\dG'"

      # Clamav
      alias scanhome="clamscan --recursive --infected {{ ansible_env.HOME }}"
      alias scanf="clamscan"

      # Firejail
      alias fjail='firejail --apparmor --private={{ jailtime_dir_path }}'

      alias ec="vim $HOME/.zshrc" # edit .zshrc
      alias sc="source $HOME/.zshrc"  # reload zsh configuration
  tags:
    - dev
    - zshrc

- name: Install Golang
  get_url:
    url: "https://dl.google.com/go/{{ golang_version }}.linux-amd64.tar.gz"
    dest: "{{ ansible_env.HOME }}/Downloads/golang.tar.gz"
  notify:
    - Golang post installation setup
    - Export golang paths
  register: golang
  tags:
    - dev
    - golang

- name: Install zsh
  ansible.builtin.apt:
    pkg:
      - zsh
      - zplug
  register: zsh
  become: yes
  notify: Change shell to zsh
  tags:
    - dev
    - zsh

- name: Remove useless packages from the cache
  become: yes
  ansible.builtin.apt:
    autoclean: yes
  tags:
    - cleanup

- name: Remove dependencies that are no longer required and purge their configuration files
  become: yes
  ansible.builtin.apt:
    autoremove: yes
    purge: true
  tags:
    - cleanup
